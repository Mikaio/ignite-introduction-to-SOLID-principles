{
    "openapi": "3.0.0",
    "info": {
        "tile": "Challenge's Documentation",
        "description": "This is a documentation for this challenge's API",
        "version": "1.0.0",
        "contact": {
            "email": "mikaiomelo04@gmail.com"
        }
    },
    "paths": {
        "/users": {
            "post": {
                "tags": ["User"],
                "summary": "Create a user",
                "description": "Creating a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "propertie": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    }
                                },
                                "example": {
                                    "name": "Mikaio",
                                    "email": "mikaio@test.com"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already in use"
                    }
                }
            },
            "get": {
                "tags": ["User"],
                "summary": "List all users",
                "description": "List all users (only for admins)",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "header",
                        "description": "The ID of an user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid user or no admin permission"
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "tags": ["User"],
                "summary": "Show a user's profile",
                "description": "By passing the user's id, that user's profile will be returned",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user's ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User turned into admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User does not exist"
                    }
                }
            }
        },
        "/users/{user_id}/admin": {
            "patch": {
                "tags": ["User"],
                "summary": "Turn a user into admin",
                "description": "By passing the user's id, that user will become an admin",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The user's ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User turned into admin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User does not exist"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "admin": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }
        }
    }
}